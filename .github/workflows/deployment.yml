name: Deploy booking robot to pi
on: 
  push: 
    branches: 
      - main
  workflow_dispatch:
env:
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  REPO: https://github.com/${{ github.repository }}.git
  IMAGE_PATH: ${{ secrets.DOCKER_NAMESPACE }}/booking-robot:latest
  IMAGE_NAME: booking-robot
  USER_NAME: ${{ secrets.DOCKER_NAMESPACE }}
jobs: 
  build-push-image:
    name: Build and push image
    runs-on: self-hosted
    steps:
      - name: Setup ssh
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      - name: Checkout Code
        run: |
          ssh ${{ env.USER_NAME }}@${{ secrets.SERVER_HOST }} -p 22 -o ConnectTimeout="10" -o StrictHostKeyChecking=no <<'ENDSSH'
          rm -rf ${{ env.IMAGE_NAME }}
          mkdir -p ~/${{ env.IMAGE_NAME }}
          cd ~/${{ env.IMAGE_NAME }}
          git init
          git remote add origin ${{ env.REPO }}
          git fetch origin
          git checkout main
          ENDSSH
      - name: Build and Publish image
        run: |
          ssh ${{ env.USER_NAME }}@${{ secrets.SERVER_HOST }} -p 22 -o ConnectTimeout="10" -o StrictHostKeyChecking=no <<'ENDSSH'
          cd ~/${{ env.IMAGE_NAME }}
          docker build -t ${{ env.IMAGE_PATH }} .
          docker login -u ${{ github.actor }} -p ${{ env.DOCKER_PASSWORD }}
          docker push ${{ env.IMAGE_PATH }}
          ENDSSH
  restart-service:
    needs: build-push-image
    name: Restart the docker service
    runs-on: self-hosted
    steps:
      - name: Setup ssh
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      - name: Restart service
        run: |
          ssh ${{ env.USER_NAME }}@${{ secrets.SERVER_HOST }} -p 22 -o ConnectTimeout="10" -o StrictHostKeyChecking=no <<'ENDSSH'
          cd ~/${{ env.IMAGE_NAME }}
          docker compose down
          docker system prune -af
          docker compose up -d
          rm -rf *
          ENDSSH